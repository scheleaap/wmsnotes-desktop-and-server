buildscript {
    ext.grpcVersion = '1.15.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

apply plugin: 'com.google.protobuf'


dependencies {
    // Infrastructure
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'au.com.console:kassava:1.0.0'
    compile 'javax.inject:javax.inject:1'
    compile 'commons-codec:commons-codec:1.11'
    compile 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    // Storage: Serialization, MapDB
    compile 'com.esotericsoftware:kryo:5.0.0-RC1' // Selected based on https://github.com/eishay/jvm-serializers/wiki
    compile 'org.mapdb:mapdb:3.0.7'

    // gRPC
    compile "io.grpc:grpc-protobuf:$grpcVersion"
    compile "io.grpc:grpc-stub:$grpcVersion"

    // Testing
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.3.1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.1")
    testCompile("org.assertj:assertj-core:3.11.1")
    // See also https://blog.philipphauer.de/best-practices-unit-testing-kotlin/
    testImplementation 'io.mockk:mockk:1.8.8'
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.5.1-1' }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
