buildscript {
    ext {
        versions = [
                springBoot: '2.0.5.RELEASE',
        ]
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}"
    }
}

apply plugin: 'application'

apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext {
    versions = [
            tornadofx: "1.7.15",
            flexmark : "0.32.20"
    ]
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    compile project(':shared')

    // Infrastructure
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile 'com.github.thomasnield:rxkotlinfx:2.2.2'

    // Spring Boot
    // Examples on how to integrate JavaFX with Spring Boot:
    // - https://github.com/bkenn/springboot-tornadofx
    // - https://github.com/sedovalx/spring-boot-tornadofx/tree/master/src/main/kotlin/ru/croc/spring/ui/sample
    compile 'org.jetbrains.kotlin:kotlin-reflect'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'

    // gRPC
    compile "io.grpc:grpc-netty-shaded:$grpcVersion"

    // JavaFX, TornadoFX, RxKotlinFX, ControlsFX
    compile "no.tornado:tornadofx:${versions.tornadofx}"
    compile 'no.tornado:tornadofx-controlsfx:0.1.1'
    compile 'org.controlsfx:controlsfx:8.40.14'
//    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.9.1'

    // Configuration
//    compile 'com.natpryce:konfig:1.6.10.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
    kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

startScripts {
    mainClassName 'info.maaskant.wmsnotes.desktop.app.Application'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'info.maaskant.wmsnotes.desktop.app.Application'
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}
